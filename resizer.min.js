/**
 * Resize 0.1.0
 *It is a scaling resizer without responsive much
 *
 * Copyright 2020 Eddy Siow
 *
 * Released under the MIT License
 *
 */
!(function (i) {
  "use strict";
  new ((function ({ width: i, height: e }) {
    var n = function (i, e) {
      (this.el = window),
        (this.options = Object.assign({}, this.defaults, e)),
        this.bindEvents();
    };
    return (
      (n.prototype = {
        defaults: {
          oriWidth: 1920 | i,
          oriHeight: 1080 | e,
          scaleX: window.innerWidth / 1920,
          scaleY: window.innerHeight / 1080,
          scale2: self.scaleX / 2,
          uniScale: null,
          uniScale0: null,
          screenWidth: window.innerWidth,
          screenHeight: window.innerHeight,
          uni1: new Object(),
          transformOrigin: "0 0 0",
          speedTransition: "1",
        },
        bindEvents: function () {
          this.scale(), this.resize();
        },
        scale: function () {
          var i = this.options;
          (i.scaleX = window.innerWidth / i.oriWidth),
            (i.scaleY = window.innerHeight / i.oriHeight),
            (i.scale2 = window.innerWidth / 2),
            window.innerHeight > (window.innerWidth * i.oriHeight) / i.oriWidth
              ? ((i.uniScale = i.scaleX),
                (i.uniScale0 = window.innerHeight / i.oriHeight))
              : ((i.uniScale = i.scaleY),
                (i.uniScale0 = window.innerWidth / i.oriWidth)),
            (i.uni1.uniScale1 = window.innerWidth / i.oriWidth),
            (i.uni1.x =
              window.innerWidth / 2 - (i.uni1.uniScale1 * i.oriWidth) / 2),
            (i.uni1.y =
              window.innerWidth / 2 - (i.uni1.uniScale1 * i.oriHeight) / 2),
            (i.uni1.height = i.oriHeight * i.uni1.uniScale1),
            (i.uni1.width = i.oriWidth * i.uni1.uniScale1),
            this.transform();
        },
        defaultCss: function () {
          var i = document.querySelector(".resizer"),
            e = this.options;
          (i.style.left = (window.innerWidth - 1920 * e.uniScale) / 2 + "px"),
            (i.style.top = (window.innerHeight - 1080 * e.uniScale) / 2 + "px"),
            i.style.setProperty(" -webkit-transform-origin", e.transformOrigin),
            i.style.setProperty("transform-origin", e.transformOrigin),
            i.style.setProperty("width", e.oriWidth + "px"),
            i.style.setProperty("height", e.oriHeight + "px"),
            (i.style.webkitTransition = e.speedTransition + "s all ease"),
            (i.style.transition = e.speedTransition + "s all ease"),
            (i.style.position = "absolute");
        },
        transform: function () {
          var i = this.options,
            e = document.querySelector(".resizer");
          (e.style.transform = "scale(" + i.uniScale + "," + i.uniScale + ")"),
            (e.style.msTransform =
              "scale(" + i.uniScale + "," + i.uniScale + ")"),
            (e.style.webkitTransform =
              "scale(" + i.uniScale + "," + i.uniScale + ")"),
            (e.style.MozTransform =
              "scale(" + i.uniScale + "," + i.uniScale + ")"),
            this.defaultCss();
        },
        resize: function () {
          var i = this;
          window.onresize = function (e) {
            i.scale();
          };
        },
      }),
      n
    );
  })())(document.querySelector("resizer"));
})();
